## Обобщённое правило прямоугольников с заданием точности

def _rectangle_rule(func, a, b, nseg, frac):
  dx = 1.0 * (b-a) / nseg
  sum = 0.0
  xstart = a + frac * dx
  for i in range(nseg+1):
    sum += func(xstart + i * dx)
  return sum * dx
  
def func(x):
  return sin(x)/x

from math import *
print("Используем метод прямоугольников.")
print("Интегрируемая функция: f(x) = sin(x)/x.")

a=1 # Левый край отрезка интегрирования
b=10 # Правый край отрезка интегрирования 
nseg=2 # Начальное количество сегментов
eps=1e-7 # Точность
frac=1

## Параметр 0 <= frac <= 1 задаёт долю смещения точки, в которой вычисляется функция, от левого края отрезка dx
## frac=0 --> метод левых прямоугольников
## frac=0.5 --> метод прямоугольников со средней точкой
## frac=1 --> метод правых прямоугольников
 
print ('a = ', a ,', b = ', b , ', frac = ', frac, ', eps = ', eps, sep='')

int_1 = _rectangle_rule(func, a, b, nseg, frac)
nseg *= 2
int_2 = _rectangle_rule(func, a, b, nseg, frac)

while abs(int_1 - int_2) > eps:
  nseg *= 2
  int_1 = _rectangle_rule(func, a, b, nseg, frac)
  nseg *= 2
  int_2 = _rectangle_rule(func, a, b, nseg, frac)
  
print("\nОтвет: I =", int_2, "\nКоличество разбиений:", nseg)
