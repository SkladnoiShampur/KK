import math

def simpson_rule(func, a, b, nseg):
  """Вычисляет интеграл методом Симпсона."""

  if nseg % 2 != 0:
    nseg += 1  # Make sure nseg is even

  dx = 1.0 * (b - a) / nseg
  sum = func(a) + func(b)

  for i in range(1, nseg, 2):
    sum += 4 * func(a + i * dx)

  for i in range(2, nseg-1, 2):
    sum += 2 * func(a + i * dx)

  return sum * dx / 3


def func(x):
  """Подынтегральная функция (sin(x)/x)."""
  if x == 0:
        return 1.0 # Handle singularity at x=0 using L'Hopital's rule, sin(x)/x -> 1 as x -> 0
  return math.sin(x) / x

# Main Program

print("Используем метод Симпсона")
print("Интегрируемая функция: f(x) = sin(x)/x")

a = 1       # Левый край отрезка интегрирования
b = 10      # Правый край отрезка интегрирования
nseg = 2    # Начальное количество сегментов
eps = 1e-7  # Точность

print(' a =', a, ', b =', b, ', eps =', eps, sep='')

int_1 = simpson_rule(func, a, b, nseg)
nseg *= 2
int_2 = simpson_rule(func, a, b, nseg)

while abs(int_1 - int_2) > eps:
  nseg *= 2
  int_1 = simpson_rule(func, a, b, nseg)
  int_2 = simpson_rule(func, a, b, nseg)

print("Ответ: I =", int_2, ", Количество разбиений=", nseg)
